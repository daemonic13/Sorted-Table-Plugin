(function(d) {
  d.fn.sortedtable = function(l) {
    var k = this, h = d.extend({}, d.fn.sortedtable.defaults, l);
    sortFns = d.extend({}, {"int":function(c, e) {
      return parseInt(c, 10) - parseInt(e, 10);
    }, "float":function(c, e) {
      return parseFloat(c) - parseFloat(e);
    }, string:void 0}, h.sortFns);
    var m = function(c, e) {
      for (var f = c.slice(0), f = e ? f.sort(e) : f.sort(), a = [], b = 0, g = 0;g < c.length;g++) {
        for (b = d.inArray(c[g], f);-1 != d.inArray(b, a);) {
          b++;
        }
        a.push(b);
      }
      return a;
    }, n = function(c, e) {
      for (var d = c.slice(0), a = 0;a < e.length;a++) {
        newIndex = e[a], d[newIndex] = c[a];
      }
      return d;
    }, p = function(c, d) {
      var f = c.slice(0), a = c.slice(0).reverse(), b = c.slice(0), b = d ? b.sort(d) : b.sort();
      return!!f && !!b && !(f < b || b < f) || !!a && !!b && !(a < b || b < a);
    };
    k.on("click", "th", function(c) {
      c.stopImmediatePropagation();
      var e = k.find("tbody tr"), f = d(this).index(), a = d(this).attr("class"), b = null;
      c = d(this);
      if (a) {
        for (var a = a.split(/\s+/), g = 0;g < a.length;g++) {
          if (-1 != a[g].search("type-")) {
            b = a[g];
            break;
          }
        }
        b = b ? b.split("-")[1] : "string";
      }
      if (b) {
        a = sortFns[b];
        column = [];
        e.each(function(a, b) {
          var c = d(b).children().eq(f), c = c.attr("data-order-by") || (h.trimtext ? d.trim(c.text()) : c.text());
          column.push(c);
        });
        b = d(this);
        g = b.hasClass("order-asc");
        k.find("thead th").removeClass("order-asc order-desc");
        b.addClass(g ? "order-desc" : "order-asc");
        b = [];
        if (p(column, a)) {
          for (column.reverse(), a = column.length - 1;0 <= a;a--) {
            b.push(a);
          }
        } else {
          b = m(column, a);
        }
        e = d(n(e, b));
        h.useicon && (c.siblings().find(".sorticon").remove(), a = c.find(".sorticon"), 0 < a.length ? a.toggleClass(h.iconascending + " " + h.icondescending) : (a = d(document.createElement("span")), a.addClass("ui-icon sorticon").addClass(h.icondescending), a.css({display:"inline-block", verticalAlign:"middle"}), c.append(a)));
        k.find("tbody").append(e);
      }
    });
  };
  d.fn.sortedtable.defaults = {icondescending:"ui-icon-triangle-1-s", iconascending:"ui-icon-triangle-1-n", useicon:!0, trimtext:!0, sortFns:{}};
})(jQuery);